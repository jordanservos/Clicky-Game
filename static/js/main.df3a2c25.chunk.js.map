{"version":3,"sources":["assets/images/bulba.png","assets/images/charizard.png","assets/images/chikorita.png","assets/images/Eevee.png","assets/images/fox.png","assets/images/meowth.png","assets/images/mew.png","assets/images/mewtwo.png","assets/images/monkey.png","assets/images/pikachu.png","assets/images/simisear.png","assets/images/squirtle.png","assets/images/ash.png","assets/images/froggy.png","assets/images/vapareon.png","components/NavBar/NavBar.js","components/Score/Score.js","components/ImageHolder/ImageHolder.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","className","href","src","width","height","alt","id","Score","score","topScore","alert","ImageHolder","newImages","arr","temp","index","counter","length","Math","floor","random","Shuffle","key","require","onClick","handleImageClick","App","state","imagesSelected","event","console","log","imageID","target","includes","setState","push","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.df3a2c25.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bulba.3b7c03da.png\";","module.exports = __webpack_public_path__ + \"static/media/charizard.c8f0acd8.png\";","module.exports = __webpack_public_path__ + \"static/media/chikorita.9c6362bc.png\";","module.exports = __webpack_public_path__ + \"static/media/Eevee.4b98c914.png\";","module.exports = __webpack_public_path__ + \"static/media/fox.5727e0a4.png\";","module.exports = __webpack_public_path__ + \"static/media/meowth.3b469ded.png\";","module.exports = __webpack_public_path__ + \"static/media/mew.2a71cf29.png\";","module.exports = __webpack_public_path__ + \"static/media/mewtwo.14650594.png\";","module.exports = __webpack_public_path__ + \"static/media/monkey.5df4c2cd.png\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.c72d6d77.png\";","module.exports = __webpack_public_path__ + \"static/media/simisear.6d099121.png\";","module.exports = __webpack_public_path__ + \"static/media/squirtle.aad1908d.png\";","module.exports = __webpack_public_path__ + \"static/media/ash.667a99cd.png\";","module.exports = __webpack_public_path__ + \"static/media/froggy.1a482990.png\";","module.exports = __webpack_public_path__ + \"static/media/vapareon.01174de9.png\";","import React from 'react';\nimport \"./nav.css\";\n\nfunction NavBar(props) {\n\n    return (\n\n\n<nav className=\"navbar navbar-light bg-light\">\n  <a className=\"navbar-brand\" href=\"/\">\n    <img src=\"https://pngimg.com/uploads/pokeball/pokeball_PNG24.png\" width=\"30\" height=\"50\" className=\"d-inline-block align-top\" alt=\"\" id=\"pokeball\"/><h5 className=\"d-inline-block align-middle\" id=\"title\">Pokemon Clicky Game</h5>\n  </a>\n</nav>\n\n    );\n\n}\n\nexport default NavBar;","import React from 'react';\nimport \"./score.css\";\n\nfunction Score(props) {\n\n    return (\n\n<div className=\"jumbotron jumbotron-fluid\">\n  <div className=\"container text-center\">\n    <h3 className=\"display-4\" id=\"score\">Your Score: {props.score}</h3>\n    <h4 className=\"display-5\" id=\"top-score\">Top Score: {props.topScore}</h4>\n    <hr></hr>\n    <p id=\"alert\">{props.alert}</p><br></br>\n  \n  </div>\n</div>\n\n    );\n\n}\n\nexport default Score;","import React from \"react\";\nimport \"./images.css\";\n\nfunction ImageHolder(props) {\n  //create an image array\n\n  const imageArray = [\n    <img\n      key=\"1\"\n      alt=\"\"\n      id=\"1\"\n      src={require(\"../../assets/images/bulba.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"2\"\n      alt=\"\"\n      id=\"2\"\n      src={require(\"../../assets/images/charizard.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"3\"\n      alt=\"\"\n      id=\"3\"\n      src={require(\"../../assets/images/chikorita.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"4\"\n      alt=\"\"\n      id=\"4\"\n      src={require(\"../../assets/images/Eevee.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"5\"\n      alt=\"\"\n      id=\"5\"\n      src={require(\"../../assets/images/fox.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"6\"\n      alt=\"\"\n      id=\"6\"\n      src={require(\"../../assets/images/meowth.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"7\"\n      alt=\"\"\n      id=\"7\"\n      src={require(\"../../assets/images/mew.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"8\"\n      alt=\"\"\n      id=\"8\"\n      src={require(\"../../assets/images/mewtwo.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"9\"\n      alt=\"\"\n      id=\"9\"\n      src={require(\"../../assets/images/monkey.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"10\"\n      alt=\"\"\n      id=\"10\"\n      src={require(\"../../assets/images/pikachu.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"11\"\n      alt=\"\"\n      id=\"11\"\n      src={require(\"../../assets/images/simisear.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"12\"\n      alt=\"\"\n      id=\"12\"\n      src={require(\"../../assets/images/squirtle.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"13\"\n      alt=\"\"\n      id=\"13\"\n      src={require(\"../../assets/images/ash.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"14\"\n      alt=\"\"\n      id=\"14\"\n      src={require(\"../../assets/images/froggy.png\")}\n      onClick={props.handleImageClick}\n    />,\n    <img\n      key=\"15\"\n      alt=\"\"\n      id=\"15\"\n      src={require(\"../../assets/images/vapareon.png\")}\n      onClick={props.handleImageClick}\n    />,\n  ];\n\n  //create function to shuffle images on click\n  function Shuffle(arr) {\n    let counter = arr.length;\n    let temp;\n    let index;\n\n    while (counter > 0) {\n      index = Math.floor(Math.random() * counter);\n      counter--;\n      temp = arr[counter];\n      arr[counter] = arr[index];\n      arr[index] = temp;\n    }\n    return arr;\n  }\n\n  //display new shuffle array of images\n  let newImages = Shuffle(imageArray);\n\n  return (\n\n\n\n    <main className=\"newImages\">\n      <div className=\"container text-center\">\n          <h2>{props.alert}</h2>\n          {newImages}\n      \n      </div>\n    </main>\n  );\n}\n\nexport default ImageHolder;\n","import React, { Component } from \"react\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Score from \"../components/Score/Score\";\nimport ImageHolder from \"../components/ImageHolder/ImageHolder\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Set game start state variables\n  state = {\n    score: 0,\n    topScore: 0,\n    imagesSelected: [],\n    alert: \"Click on different Pokemon images each time to earn points! Repeat click and you LOSE!\",\n  };\n\n  //Create function for image clicks\n\n  // console.log(\"The Score is: \", score);\n\n  handleImageClick = event => {\n    console.log(\"CLICKED\");\n\n    // capture id of clicked image\n    const imageID = event.target.id;\n\n    //Create condition for user repeat clicks\n\n    if (this.state.imagesSelected.includes(imageID)) {\n      this.setState({\n        score: 0,\n        imagesSelected: [],\n        alert: \"You already cliked that one! Start again...\",\n      });\n    } else {\n      // capture id and pass to imageID if clicked for first time\n\n      this.state.imagesSelected.push(imageID);\n\n      //update score and top score\n\n      if (this.state.topScore <= this.state.score) {\n        this.setState({\n          topScore: this.state.score + 1,\n          alert: \"Great selection!\",\n          score: this.state.score + 1,\n        });\n      } else {\n        this.setState({\n          alert: \"Great selection!\",\n          score: this.state.score + 1,\n        });\n        console.log(this.state.score, \"this works!\")\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <NavBar />\n        <Score alert={this.state.alert} score={this.state.score} topScore={this.state.topScore} />\n        <ImageHolder handleImageClick={this.handleImageClick} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}